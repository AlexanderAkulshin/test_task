apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "internal-service.fullname" . }}
  labels:
    {{- include "internal-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "internal-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "internal-service.labels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      serviceAccountName: {{ if .Values.serviceAccount.create }}{{ default (include "internal-service.fullname" .) .Values.serviceAccount.name }}{{ else }}{{ .Values.serviceAccount.name | quote }}{{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.topologySpreadConstraints.enabled }}
      topologySpreadConstraints:
        - maxSkew: {{ .Values.topologySpreadConstraints.maxSkew }}
          topologyKey: {{ .Values.topologySpreadConstraints.topologyKey | quote }}
          whenUnsatisfiable: {{ .Values.topologySpreadConstraints.whenUnsatisfiable }}
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "internal-service.name" . }}
              app.kubernetes.io/instance: {{ .Release.Name }}
      {{- end }}
      {{- if .Values.affinity.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          {{- if eq .Values.affinity.podAntiAffinity.type "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ {{ include "internal-service.name" . }} ]
              topologyKey: "kubernetes.io/hostname"
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: [ {{ include "internal-service.name" . }} ]
                topologyKey: "kubernetes.io/hostname"
          {{- end }}
      {{- end }}
      containers:
        - name: app
          image: "{{ printf "%s/%s:%s" .Values.hub .Values.image .Values.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PROD
              value: {{ ternary "true" "false" .Values.prod | quote }}
            {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 2
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
